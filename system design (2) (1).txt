1
Name : Aryan Mandya 

 College: IIT ROORKEE 

Roll Number : 21112034 

 System Design Document:  Chat Application- 

Introduction 

The Chat Web App is a real-time communication platform designed to facilitate seamless 
and interactive conversations online. Whether you need to connect with  friends, family, or 
colleagues, our chat app provides a user-friendly and feature-rich solution for all your 
messaging needs. 

System  Architecture 
























                                                                                                                                                    

 

Front  End: Powered by the React framework, our application offers a sleek and responsive user 
interface that works seamlessly across devices.  

Real-Time  Communication:      We leverage the power of Stream-chat Api to provide instant, 
real-time messaging capabilities. 

 Robust  Backend:  Built with Node.js, our backend infrastructure ensures smooth data 
processing, user management, and connectivity.  

Robust  Data  Storage:  Your chat history and user data are securely stored and managed by  
Stream-chat Api 

Components        and   Modules 

2
BackEnd: 

Controllers   folder-    This folder container auth.js file that has all the middleware functions related 
to authentication 

Routes  folder-   This folder container auth.js file that has all the middleware functions related to 
sign in or sign up 

.env file-   it contains all the environment variables 

Index.js  file-   this file contains code for the server 

FrontEnd: 

Public  folder:   The contents of the "public" folder are typically served as-is to the client without 
any modification, making them ideal for assets like HTML files, images, fonts, and other resources 
that don't need to be bundled  

Src folder:  

     1.   Assets  folder:    The "assets" folder inside the "src" folder of a React application is typically 
           used to store various types of static assets, such as images, fonts, and other resource files, 
           that your application may need. The primary purpose of this folder is to keep these assets 

           organized and accessible within your application's source code. 

     2.   Components     folder:  this folder contains react components related to authentication 
           and components related to chat application and stream-chat along with stream chats pre-
           defined components 
     3.   Circle.jsx   file:  this file contains code for chat bot 

 

SetUp    Device- 

NodeJs: 

1. Clone the Repository: Clone the repository that contains your Node.js app. Git clone 
https://github.com/aryanmandya/chat_project.git 

2. Navigate to the Project Directory: Change your current working directory to the project's root 
folder:  

cd<server name given>  

3. Install Dependencies: Run the following command to install the required Node.js dependencies 
listed in your package.json file: 

 npm install 

     4.   Start the Node.js Server:  
           Nodemon index.js 

3
 

